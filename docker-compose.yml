version: '3.8'

services:

  traefik:
    image: traefik:latest
    command: --api.insecure=true --providers.docker
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`www.traefik.lan`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80

  mailhog:
    image: mailhog/mailhog:latest
    environment:
      MH_STORAGE: maildir
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailhog.rule=Host(`www.mailhog.lan`)
      - traefik.http.services.mailhog.loadbalancer.server.port=8025
    depends_on:
      - traefik
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/mailhog/src:/maildir:rw
      - mailhog_data:/maildir:rw,delegated

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: ${MYSQL_HOST}
      PMA_PORT: ${MYSQL_PORT}
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`www.phpmyadmin.lan`)
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
    links:
      - mysql
    depends_on:
      - traefik
      - mysql

  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    labels:
      - traefik.enable=false
    depends_on:
      - traefik
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/mysql/src:/var/lib/mysql:rw
      - mysql_data:/var/lib/mysql:rw,delegated

  redis-cache:
    image: redis:latest
    labels:
      - traefik.enable=false
    depends_on:
      - traefik
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/redis-cache/src:/data:rw
      - redis_cache_data:/data:rw,delegated

  redis-session:
    image: redis:latest
    labels:
      - traefik.enable=false
    depends_on:
      - traefik
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/redis-session/src:/data:rw
      - redis_session_data:/data:rw,delegated

  redis-insight:
    image: redislabs/redisinsight:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.redisinsight.rule=Host(`www.redisinsight.lan`)
      - traefik.http.services.redisinsight.loadbalancer.server.port=8001
    links:
      - redis-cache
      - redis-session
    depends_on:
      - traefik
      - redis-cache
      - redis-session
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/redis-insight/src:/db:rw
      - redis_insight_data:/db:rw,delegated

  elasticsearch:
    image: elasticsearch:7.8.1
    environment:
      - discovery.type=single-node
    labels:
      - traefik.enable=true
      - traefik.http.routers.elasticsearch.rule=Host(`www.elasticsearch.lan`)
      - traefik.http.services.elasticsearch.loadbalancer.server.port=9200
    depends_on:
      - traefik
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/elasticsearch/src:/usr/share/elasticsearch/data:rw
      - elasticsearch_data:/usr/share/elasticsearch/data:rw,delegated

  kibana:
    image: kibana:7.8.1
    environment:
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
    labels:
      - traefik.enable=true
      - traefik.http.routers.kibana.rule=Host(`www.kibana.lan`)
      - traefik.http.services.kibana.loadbalancer.server.port=5601
    links:
      - elasticsearch
    depends_on:
      - traefik
      - elasticsearch
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/kibana/src:/usr/share/kibana:rw
      - kibana_data:/usr/share/kibana:rw,delegated

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq.rule=Host(`www.rabbitmq.lan`)
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
    depends_on:
      - traefik
    volumes:
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./data/rabbitmq/src:/var/lib/rabbitmq:rw
      - rabbitmq_data:/var/lib/rabbitmq:rw,delegated

  varnish:
    image: varnish:6.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.varnish.rule=Host(`www.magento.lan`)
      - traefik.http.services.varnish.loadbalancer.server.port=80
    links:
      - magento
    depends_on:
      - traefik
      - magento
    volumes:
      - ./data/varnish/config:/etc/varnish:rw,delegated

  magento:
    image: ${DOCKER_IMAGE}
    env_file:
      - .env
    environment:
      USER_ID: ${USER_ID}
      USER_GROUP: ${USER_GROUP}
      USER_NAME: ${USER_NAME}
    labels:
      - traefik.enable=false
    links:
      - mysql
      - redis-cache
      - redis-session
      - elasticsearch
      - rabbitmq
      - mailhog
    depends_on:
      - traefik
      - mysql
      - redis-cache
      - redis-session
      - elasticsearch
      - rabbitmq
      - mailhog
    volumes:
      - .:/var/www/html:rw,delegated

volumes:
  mysql_data:
  redis_cache_data:
  redis_session_data:
  redis_insight_data:
  elasticsearch_data:
  kibana_data:
  rabbitmq_data:
  mailhog_data:
